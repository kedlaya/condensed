<section xml:id="sec_solid_completion">
  <title>Solid completion</title>
  <introduction>
    <p>
      In this lecture, we continue the discussion of solid modules,
      focusing now on the interaction between the solid property and the classical concept of completing a ring with respect to an ideal;
      one recurring theme will be the good behavior of solid tensor products.
      The moral of this section is that one can faithfully reproduce all constructions of nonarchimedean analysis and geometry in the solid language,
      with some simplifications to boot.
    </p>
    <paragraphs>
      <title>Reference</title>
      <p>
        This section is based on <xref ref="bib-Clausen-Scholze-youtube"/>, Lecture 6,
        except that we sometimes interpret solid abelian groups in the framework of <xref ref="sec_solid1"/>.
        See also <xref ref="bib-Clausen-Scholze-notes"/>, Lecture 6.
      </p>
    </paragraphs>
  </introduction>
   <subsection>
    <title>Some solid rings</title>
    <p>
      We first observe that a number of familiar topological rings are in fact solid,
      in the sense that their underlying topological groups, viewed as condensed abelian groups, are solid.
    </p>
    <example xml:id="exa-power-series-as-solid-rings">
      <p>
        Equip the ring <m>\ZZ \llbracket T \rrbracket</m> with the <m>T</m>-adic topology.
        The underlying object of <m>\TopAb</m> is then solid in <m>\CAb</m>: it corresponds to <m>\prod_\NN \ZZ_\solid \in \Ab_\solid</m>.
        We may thus view it as representing a ring object in <m>\CAb_\solid</m>, and the homomorphism <m>\ZZ[T] \to \ZZ \llbracket T \rrbracket</m>
        of topological rings
        (for the discrete topology on <m>\ZZ[T]</m>) represents a morphism of ring objects in <m>\CAb_\solid</m>.
      </p>
      <p>
        By the same token, <m>\ZZ \llbracket T_1,\dots, T_n \rrbracket</m> equipped with the <m>(T_1,\dots,T_n)</m>-adic topology represents a ring object in <m>\CAb_\solid</m>.
      </p>
    </example>
    <example>
      <p>
        Equip <m>\ZZ_p \cong \ZZ \llbracket T \rrbracket/(T-p)</m> with the <m>p</m>-adic topology,
        which is the same as the quotient topology induced by the <m>T</m>-adic topology.
        This gives yet another ring object in <m>\CAb_\solid</m>; in fact we can simply take the topological ring <m>\ZZ \llbracket T \rrbracket</m>, interpret it in <m>\CAb_\solid</m>,
        and take the cokernel of multiplication by <m>T-p</m> to get what we want.
      </p>
      <p>
        Equip <m>\QQ_p = \ZZ_p[1/p]</m> with its usual topology, which we can view as the direct limit topology on
        <me>
          \colim \left( \ZZ_{p} \stackrel{\times p}{\to} \ZZ_{p} \stackrel{\times p}{\to} \cdots \right).
        </me>
        This is also a ring object in <m>\CAb_\solid</m>.
      </p>
    </example>
    <example>
      <p>
        We have
        <md>
          <mrow>
            \QQ_{p} \otimes_\solid \ZZ \llbracket T \rrbracket &amp;= (\ZZ_{p} \otimes_{\solid} \ZZ \llbracket T \rrbracket)[1/p] 
          </mrow>
          <mrow>
            &amp;= \left(\left(\ZZ\llbracket T_1 \rrbracket/(T_1-p) \right) \otimes \ZZ \llbracket T_2 \rrbracket \right)[1/p]
          </mrow>
          <mrow>
            &amp; = \left( \ZZ\llbracket T_1, T_2 \rrbracket/(T_1-p) \right)[1/p]
          </mrow>
          <mrow>
            &amp; = \ZZ_p \llbracket T \rrbracket[1/p]
          </mrow>
        </md>
        where we equip <m>\ZZ_p \llbracket T \rrbracket</m> with the <m>(p,T)</m>-adic topology.
        We observe that <m>\QQ_{p} \otimes_\solid \ZZ \llbracket T \rrbracket </m> injects into <m>\QQ_p \llbracket T \rrbracket</m> but is much smaller; 
        it consists of the power series with bounded coefficients,
        which can also be interpreted as the bounded rigid-analytic functions on the open unit disc over <m>\QQ_p</m>.
      </p>
    </example>
    <example xml:id="exa-solid-Tate-algebra">
      <p>
        Returning to <xref ref="exa-power-series-as-solid-rings"/>, note that in <m>\Ab_\solid</m> the rings <m>\ZZ[T]</m> and <m>\ZZ\llbracket T \rrbracket</m>
        correspond to the functors
        <me>
          \prod_I \ZZ_\solid \mapsto \left( \bigoplus_I \ZZ \right)[T] = \bigoplus_I \ZZ[T], \qquad
          \prod_I \ZZ_\solid \mapsto \left( \bigoplus_I \ZZ \right) \llbracket T \rrbracket
        </me>.
        As in <xref ref="exa-solid-modules-with-underlying-zero"/>, we can insert in between the functor
        <me>
          \prod_I \ZZ_\solid \mapsto \left( \prod_I \ZZ[T] \right) \cap \left( \bigoplus_I \ZZ \right) \llbracket T \rrbracket \subset \left( \prod_I \ZZ \right) \llbracket T \rrbracket
        </me>.
        This corresponds to a ring object in <m>\Ab_\solid</m>
        which we might call <m>\ZZ\langle T \rangle</m>, but which does <em>not</em> correspond to a topological ring.
      </p>
      <p>
        However, this example is extremely useful! For instance, we have
        <me>
          \ZZ \langle T \rangle \otimes_\solid \ZZ \llbracket U \rrbracket \cong \ZZ \llbracket U \rrbracket\langle T \rangle
        </me>
        where <m>\ZZ \llbracket U \rrbracket\langle T \rangle</m> means the <m>U</m>-adic completion of <m>\ZZ\llbracket U \rrbracket[T]</m>
        (or equivalently of <m>\ZZ[U,T]</m>). To see this, write <m>\ZZ \llbracket U \rrbracket</m> as <m>\prod_n \ZZ\cdot U^n</m>
        and recall that <m>\otimes_\solid</m> commutes with countable products.
      </p>
    </example>
    <example xml:id="exa-solid-Tate-algebra2">
      <p>
        By dividing by <m>U-p</m> in the previous example, we deduce that
        <me>
          \ZZ \langle T \rangle \otimes_\solid \ZZ_p \cong \ZZ_p \langle T \rangle
        </me>
        where <m>\ZZ_p\langle T \rangle</m> means the <m>p</m>-adic completion of <m>\ZZ[T]</m>, i.e., the usual Tate algebra in one variable over <m>\ZZ_p</m>.
        Similarly
        <me>
          \ZZ \langle T \rangle \otimes_\solid \QQ_p \cong \QQ_p \langle T \rangle
        </me>
        where now <m>\QQ_p \langle T \rangle</m> is the ring of rigid-analytic functions on the <em>closed</em> unit disc over <m>\QQ_p</m>.
      </p>
      <p>
        This suggests some value in working with solid rings and modules instead of topological rings and modules
        when dealing with adic completions and related constructions; they represent certain functors that would otherwise not be representable.
      </p>
    </example>
    <p>
      Our treatment of the following example follows <xref ref="bib-Kedlaya-Liu2"/>, Example 2.1.10.
    </p>
    <example xml:id="exa-localization-not-flat">
      <p>
        Define <m>A := \QQ_p \langle T \rangle</m> as in <xref ref="exa-solid-Tate-algebra2"/>, then set
        <md>
          <mrow>
            B &amp;:= A \langle U \rangle/(T -pU)
          </mrow>
          <mrow>
            C &amp;:= A \langle V \rangle/(T-1 - pV)
          </mrow>
        </md>.
        Geometrically, <m>B</m> and <m>C</m> correspond to the disjoint closed discs <m>|T| \leq |p|</m> and <m>|T-1| \leq |p|</m>.
        Writing <m>\otimes_{A \solid}</m> for the solidification of the tensor product over <m>A</m> (notably a composition of two right exact functors), 
        we then have
        <md>
          <mrow>
            B \otimes_{A \solid} C &amp;= A \langle U,V \rangle / (T-pU, T-1-pV)
          </mrow>
          <mrow>
            &amp;= A \langle U,V \rangle/ (T-pU, 1-p(V-U))
          </mrow>
          <mrow>
            &amp; = (A \langle U,V \rangle/(1-p(U-V)) / (T-pU)
          </mrow>
        </md>
        and already <m>(A \langle U,V \rangle/(1-p(U-V)) = 0</m> because <m>1-p(U-V)</m> admits the inverse <m>1 + p(U-V) + p^2(U-V)^2 + \cdots</m> in <m>A \langle U,V \rangle</m>.
      </p>
      <p>
        Now note that <m>A \to B</m> is injective, but applying <m>\bullet \otimes_{A \solid} C</m> yields <m>C \to 0</m> which is not injective.
        In other words, 
        <me>
          (B/A) \otimes^L_{A \solid} C \cong C[-1]
        </me>.
      </p>
    </example>
  </subsection>
 <subsection>
    <title>Derived completeness</title>
    <p>
      Fix a commutative ring <m>R</m>. We recall the notion of derived completeness
      and compare it to the solid property for condensed abelian groups.
      See <xref ref="bib-prismatic"/>, section 6 for a more thorough presentation.
    </p>
    <remark>
      <p>
        For <m>I</m> an ideal of <m>R</m>, and <m>M \in \Mod_R</m>,
        the <m>I</m>-adic completion of <m>M</m> is defined as <m>\varprojlim_n M/I^n M</m>.
        We say that <m>M</m> is <term>classically <m>I</m>-complete</term> if the natural map <m>M \to \varprojlim_n M/I^n M</m> is an isomorphism.
      </p>
      <p>
        Unfortunately, this construction exhibits many pathological behaviors!
        See <xref ref="bib-prismatic"/>, section 6.1 for a detailed discussion.
      </p>
    </remark>
    <p>
      Focusing now on the case where <m>I = (f)</m>, we make the following observation.
      (See <xref ref="rem-completion-finitely-generated"/> for a remark on the case where <m>I</m> is finitely generated but not necessarily principal.)
    </p>
    <lemma xml:id="lem-classical-to-derived-complete">
      <statement>
        <p>
          Suppose that <m>M \in \Mod_R</m> is classically <m>f</m>-adically complete. Then
          <men xml:id="eq-derived-completeness-criterion">
            R\Hom_R(R_f, M) = 0
          </men>.
        </p>
      </statement>
      <proof>
        <p>
          Since <m>R_f</m> admits a projective resolution of length 1:
          <me>
            0 \to R[T] \stackrel{\times 1-fT}{\to} R[T] \to R_f \to 0
          </me>,
          this amounts to verifying that
          <me>
            \Hom_{R}(R_f, M) = 0 \qquad \text{and} \qquad \Ext^1_{R}(R_f, M) = 0
          </me>.
          The first of these is obvious because
          <md>
            <mrow>
              \Hom_{R}(R_f, M) &amp;= \Hom_{R}(R_f, \varprojlim_{n \to \infty} M/f^n M)
            </mrow>
            <mrow>
              &amp; = \varprojlim_{n \to \infty}  \Hom_{R}(R_f, M/f^n M) = \varprojlim_{n \to \infty} 0 = 0
            </mrow>
          </md>.
          For the second assertion, consider an extension in <m>\Mod_R</m> of the form
          <me>
            0 \to M \to E \to R_f \to 0.
          </me>
          For each <m>n \geq 0</m>, choose <m>e_n \in E</m> mapping to <m>f^{-n}</m> and set <m>\delta_n := f e_{n+1} - e_n \in M</m>. 
          Since <m>M</m> is classically <m>f</m>-complete, we may form the elements
          <me>
            e'_n := e_n + \delta_n + f \delta_{n+1} + f^2 \delta_{n+2} + \cdots \in E
          </me>
          which satisfy <m>fe'_{n+1} = e'_n</m>; we may thus split the map <m>R_f \to E</m> by mapping <m>f^{-n}</m> to <m>e'_n</m>.
        </p>
      </proof>
    </lemma>
    <p>
      Shifting to solid modules, we now make the following definition.
    </p>
    <definition>
      <p>
        An object <m>M \in \Mod_{R_\solid}</m> is <term>classically <m>f</m>-complete</term> if the natural map 
        <m>M \to \varprojlim_n M/f^n M</m> is an isomorphism,
        and <term>derived <m>f</m>-complete</term> if <m>R\Hom_{R_\solid}((R_f)_\solid, M) = 0</m>.
        As in the proof of <xref ref="lem-classical-to-derived-complete"/>, we have the exact sequence
        <men xml:id="eq-resolution-of-Rf">
          0 \to R[T]_\solid \stackrel{\times (1-fT)}{\to} R[T]_\solid \to (R_f)_\solid \to 0
        </men>;
        hence <m>M</m> is derived <m>f</m>-complete if and only if <m>1-fT</m> acts isomorphically on <m>R\Hom_{R_\solid}(R[T]_\solid, M)</m>.
      </p>
      <p>
        By the same token, we say that an object <m>M</m> in the (unbounded) derived category of <m>\Mod_{R_\solid}</m> is <term>derived <m>f</m>-complete</term>
        if <m>R\Hom_{R_\solid}((R_f)_\solid, M) = 0</m>, or equivalently if <m>1-fT</m> acts isomorphically on <m>R\Hom_{R_\solid}(R[T]_\solid, M)</m>.
        We will see a bit later that this holds if and only if the cohomology groups of <m>M</m> are individually derived <m>f</m>-complete.
        For now, it is clear that an object of <m>\Mod_{R_\solid}</m> is derived <m>f</m>-complete as an object of <m>\Mod_{R_\solid}</m>
        if and only if it is derived <m>f</m>-complete as an object in the derived category.
      </p>
      <p>
        From the definition, it is evident that if two of the three terms of a short exact sequence (or in the derived category, a distinguished triangle)
        are derived <m>f</m>-complete, then so is the third.
      </p>
    </definition>
    <lemma xml:id="lem-classical-to-derived-complete-solid">
      <statement>
        <p>
          If <m>M \in \Mod_{R_\solid}</m> is classically <m>f</m>-adically complete, then it is also derived <m>f</m>-adically complete.
        </p>
      </statement>
      <proof>
        <p>
          The proof of <xref ref="lem-classical-to-derived-complete"/> carries over.
        </p>
      </proof>
    </lemma>
    <proposition>
      <statement> 
        <p>
          The derived <m>f</m>-complete modules form a subcategory of <m>\Mod_{R_\solid}</m> closed under formation of kernels and cokernels; in particular it is an abelian category.
          Moreover, the derived <m>f</m>-complete objects in the derived category are precisely the objects whose cohomology groups are derived <m>f</m>-complete modules.
        </p>
      </statement>
      <proof>
        <p>
          The second assertion is a formal consequence of the existence of the bounded resolution <xref ref="eq-resolution-of-Rf"/> of <m>(R_f)_\solid</m>.
          For the first, let <m>M \to N</m> be a morphism between derived <m>f</m>-complete objects in <m>\Mod_{R_\solid}</m>.
          The resulting complex is a derived <m>f</m>-complete object in the derived category;
          consequently its cohomology groups <m>\ker(M \to N)</m> and <m>\coker(M \to N)</m> are derived <m>f</m>-complete in <m>\Mod_{R_\solid}</m>.
        </p>
      </proof>
    </proposition>
    <remark xml:id="rem-discrete-versus-solid-completion">
      <p>
        At this point some care is required when mixing discrete and solid modules.
        For example, if <m>M</m> is a classically <m>f</m>-complete <m>R</m>-module, then <m>M \otimes_R R_\solid</m> is a discrete <m>R_\solid</m>-module
        which by <xref ref="lem-classical-to-derived-complete"/> is also derived <m>f</m>-complete.
        On the other hand, if we take the limit of <m>(M/f^n M) \otimes_R R_\solid</m> in <m>\Mod_{R_\solid}</m>, we get a different object which we may denote by <m>M^\wedge_\solid</m>;
        its underlying module is still <m>M</m>, but at the level of topological abelian groups it carries the <m>f</m>-adic topology rather than the discrete topology.
        This discrepancy traces back to the fact that solidification does not commute with infinite limits (<xref ref="rem-solidification-vs-infinite-products"/>).
      </p>
      <p>
        This in particular means that we must take some care when importing results about derived completeness from the discrete setting.
      </p>
    </remark>
    <example xml:id="exa-solid-completion">
      <p>
        Let <m>\widehat{R}_\solid</m> denote the inverse limit <m>\varprojlim (R/f^nR)_\solid</m> (in <m>\Mod_{R_\solid}</m>, not <m>\Mod_R</m>;
        compare <xref ref="rem-discrete-versus-solid-completion"/>).
        Since <m>\widehat{R}_\solid</m> is classically <m>f</m>-complete,
        by <xref ref="lem-classical-to-derived-complete-solid"/>, it is also derived <m>f</m>-complete.
      </p>
      <p>
        Let <m>M \subset \prod_\NN \widehat{R}_\solid</m> be the set of <m>f</m>-adically null sequences.
        Again, <m>M</m> is classically <m>f</m>-complete and hence derived <m>f</m>-complete.
      </p>
      <p>
        Let <m>M'</m> be the image of the map <m>M \to M</m> given by multiplication by <m>f^n</m> on the <m>n</m>-th factor.
        Since this map defines an isomorphism onto its image, <m>M'</m> is also derived <m>f</m>-complete.
      </p>
      <p>
        It then follows that <m>M/M'</m> is also derived <m>f</m>-complete. However, it is not classically <m>f</m>-complete.
      </p>
    </example>
    <p>
      The following lemma ends up being surprisingly effective.
    </p>
    <lemma xml:id="lem-derived-Nakayama">
      <title>Derived Nakayama's lemma</title>
      <statement>
        <p>
          For <m>M \in \Mod_{R_\solid}</m> which is derived <m>f</m>-complete, <m>M=0</m> if and only if <m>M \otimes^L_{R_\solid} (R_\solid/fR_\solid) = 0</m>.
          The same applies in the derived category. (Note: if <m>f</m> is a zero divisor in <m>R</m> then <m>(R_\solid/fR_\solid)</m> should also be interpreted as a derived object.)
        </p>
      </statement>
      <proof>
        <p>
          By writing <m>R_\solid/f^n R_\solid</m> as a successive extension of copies of <m>R_\solid/f R_\solid</m>, we upgrade the hypothesis to assert that
          <m>M \otimes^L_{R_\solid} (R_\solid/f^n R_\solid) = 0</m> for all <m>n \in \NN</m>. 
          Writing <m>(R_f)_\solid/R_\solid</m> (or more precisely the object <m>R_\solid[-1] \to (R_f)_\solid[0]</m> in the derived category,
          which is the same only if <m>f</m> is not a zero divisor) as the colimit of <m>R_\solid/f^n R_\solid</m>, we deduce that
          <m>M \otimes^L_{R_\solid} (R_f)_\solid/R_\solid = 0</m>; 
          since derived completeness is the condition that <m>M \otimes^L_{R_\solid} (R_f)_\solid = 0</m>,
          we deduce that <m>M = M \otimes^L_{R_\solid} R_\solid = 0</m> as well.
        </p>
      </proof>
    </lemma>
    <proposition xml:id="prop-derived-completion">
      <statement>
        <p>
          The functor 
          <me>
            M \mapsto R\iHom_{R_\solid}((R_f/R)_\solid[-1], M)
          </me> 
          (interpreting <m>(R_f/R)_\solid</m> in the derived sense if <m>f</m> is a zero divisor on <m>R</m>)
          acts on the unbounded derived category of <m>\Mod_{R_\solid})</m>;
          its values are derived <m>f</m>-complete, and it is left adjoint to the full embedding of derived <m>f</m>-complete objects into the derived category.
          The functor also preserves <m>D^{\leq 0}(\Mod_{R_\solid})</m>;
          truncation to degree <m>0</m> yields 
          <me>
            M \mapsto \iExt^1_{R_\solid}((R_f/R)_\solid, M)
          </me>,
          which is a left adjoint to the full embedding of derived <m>f</m>-complete objects into <m>\Mod_{R_\solid}</m>.
        </p>
      </statement>
      <proof>
        <p>
          It will suffice to check the statements about the derived category.
          To simplify notation, we write <m>(R_f/R)_\solid</m> to mean the quotient in the derived sense 
          (this only matters if <m>f</m> is a zero divisor on <m>R</m>).
        </p>
        <p>
          Using <xref ref="eq-resolution-of-Rf"/> we obtain a bounded free resolution 
          <me>
            0 \to (R_\solid \oplus R[T]_\solid) \stackrel{\iota_0 \oplus (\times (1-fT))}{\to} R[T]_\solid \to 0
          </me>
          of <m>R_\solid \to (R_f)_\solid</m>. Consequently, if <m>M</m> is concentrated in degrees in the range <m>[a, b]</m>,
          then its image is concentrated in degrees in the range <m>[a-1, b]</m>.
          To check that the output is derived <m>f</m>-complete, we use Hom-tensor adjunction to write
          <me>
            R\iHom_{R_\solid}((R_f)_\solid, R\iHom_{R_\solid}((R_f/R)_\solid, M)) =  R\iHom_{R_\solid}((R_f \otimes^L_R R_f/R)_\solid, M)
          </me>.
          This vanishes because <m>R_f \otimes^L_R R_f/R = 0</m>.
        </p>
        <p>
          To obtain the adjunction property, we must identify a natural map <m>M \to  R\iHom_{R_\solid}((R_f/R)_\solid, M)</m>
          and then check that it is an isomorphism when <m>M</m> is itself derived <m>f</m>-complete.
          We get the map by writing <m>M = R\iHom_{R_\solid}(R_\solid, M)</m> and then taking the connecting homomorphism corresponding to
          <m>
            0 \to R \to R_f \to R_f/R \to 0;
          </m>
          this visibly yields an isomorphism if and only if <m>R\iHom_{R_\solid}(R_f, M) = 0</m>.
        </p>
      </proof>
    </proposition>
    <definition>
      <p>
        The functors in <xref ref="prop-derived-completion"/>, on <m>\Mod_{R_\solid}</m> and its derived category, will both be referred to as 
        <term>derived <m>f</m>-completion</term> (or simply as <term>derived completion</term> if it is clear from context what <m>f</m> is).
      </p>
      <p>
        Beware that for an object of <m>\Mod_{R_\solid}</m>, we must distinguish between the derived completion as a module and the <q>derived derived completion</q>
        which takes place in the derived category: they agree in degree 0 but the derived derived completion may have additional terms in negative degrees.
      </p>
    </definition>
    <example xml:id="exa-completion-of-coproduct">
      <p>
        For <m>M = \bigoplus_\NN R_\solid</m>,
        the derived <m>f</m>-completion <m>M^{\wedge}_{\solid}</m> equals the module of <m>f</m>-adically null sequences
        (<xref ref="exa-solid-completion"/>) and is also the derived derived <m>f</m>-completion.
        The latter can also be viewed 
        as the colimit of <m>\prod_{n \in \NN} f^{h(n)} \widehat{R}_\solid</m>
        as <m>h\colon \NN \to \NN</m> ranges over all functions with finite fibers.
      </p>
    </example>
    <example>
      <p>
        Suppose that <m>f</m> is not a zero divisor in <m>R</m>. Then the derived <m>f</m>-completion of <m>(R_f/R)_\solid</m> is zero, but the <em>derived</em> derived completion
        consists of <m>\widehat{R}_{\solid}</m> (the solid version, as per <xref ref="rem-discrete-versus-solid-completion"/>) placed in degree <m>-1</m>.
      </p>
    </example>
    <remark xml:id="rem-sum-null-against-f">
      <p>
        There is a certain formal similarity of the definition of the derived <m>f</m>-complete property with the definition of solidness.
        The former amounts to imposing the summability conditions on arbitrary power series in <m>f</m>, 
        while the latter imposes the condition on null sequences (i.e., implicitly <m>f=1</m>).
      </p>
      <p>
        We can bring these operations closer together by observing that if the topology on <m>R</m> is coarser than the <m>f</m>-adic topology
        (in particular, the powers of <m>f</m> form a null sequence), then
        imposing the summability of all series <m>\sum_{n=0}^\infty a_n f^n</m> is formally equivalent
        to imposing the same condition only when the <m>a_n</m> form a null sequence: in the general case we may regroup terms to obtain
        <me>
          \sum_{n=0}^\infty (a_{2n} f^n + a_{2n+1} f^{n+1}) f^n
        </me>
        and now the terms form a null sequence.
      </p>
      <p>
        This suggests that we should allow a variant of the solid property where we sum null series against a parameter <m>f</m>.
        We will introduce this construction in <xref ref="sec_analytic"/>.
      </p>
    </remark>
    <remark xml:id="rem-completion-finitely-generated">
      <p>
        In both the discrete and solid module categories, one can also work with derived <m>I</m>-completion when <m>I</m> is a finitely generated ideal of <m>R</m>,
        by imposing the condition of derived <m>f</m>-completeness successively for each <m>f</m> in a sequence of generators <m>f_1,\dots,f_m</m>.
        The point is that the ideals <m>(f_1^n, \dots, f_m^n)</m> for <m>n \in \NN</m> are cofinal with the powers of <m>I</m>, so they define the same adic topology;
        and it is easy to check that derived <m>f_i</m>-completion commutes with derived <m>f_j</m>-completion by describing the composition in terms of
        a Koszul complex whose definition is manifestly symmetric (<xref ref="bib-Stacks"/>, tag 091V).
      </p>
      <p>
        By contrast, completion with respect to an infinitely generated ideal is a poorly behaved operation (except when the same topology is defined
        by some finitely generated ideal), and we will have nothing more to say about it. A better operation is to take the colimit over completion with respect to
        finitely generated subideals of the given ideal.
      </p>
    </remark>
  </subsection>
  <subsection>
    <title>Derived completeness and tensor products</title>
    <p>
      We next verify a key compatibility of derived completeness with tensor products.
    </p>
    <lemma xml:id="lem-tensor-product-over-R">
      <statement>
        <p>
          We have <m>\widehat{R}_\solid \otimes^L_{R_\solid} \widehat{R}_\solid = \widehat{R}_\solid</m>.
        </p>
      </statement>
      <proof>
        <p>
          Since solid tensor products commute with countable limits, we may calculate
          <md>
            <mrow>
              \widehat{R}_\solid \otimes^L_{R_\solid} \widehat{R}_\solid &amp;= \left( \varprojlim_n R_\solid/(f^n) \right) \otimes_{R_\solid} \left( \varprojlim_n R_\solid/(f^n) \right)
            </mrow>
            <mrow>
              &amp;= R\varprojlim_{n_1,n_2} \left(R_\solid/(f^{n_1}) \otimes^L_{R_\solid} R_\solid/(f^{n_2}) \right)
            </mrow>
            <mrow>
              &amp;= R\varprojlim_{n_1,n_2} R_\solid/(f^{\min\{n_1,n_2\}})
            </mrow>
            <mrow>
              &amp;= R\varprojlim_{n} R_\solid/(f^n) = \widehat{R}_\solid.
            </mrow>
          </md>
        </p>
      </proof>
    </lemma>
    <remark>
      <p>
        The analogue of <xref ref="lem-tensor-product-over-R"/> without solid modules would require a completed tensor product.
        The magic here is that working in the category of solid modules means that the tensor product is automatically compatible with completion,
        as long as we provide input values that are aware of their own topologies. (For instance, taking the solid tensor product of the non-solid completion
        would just give back the classical answer.)
      </p>
      <p>
        In the short term, this means that we do not have to define a solid tensor product over <m>\widehat{R}_\solid</m>;
        we can just use our existing definition over <m>R_\solid</m>.
      </p>
    </remark>
    <lemma xml:id="lem-factor-function-with-finite-fibers">
      <statement>
        <p>
          Let <m>h\colon \NN \times \NN \to \NN</m> be a function with finite fibers.
          Then we can find functions <m>h_1,h_2 \colon \NN \to \NN</m> with finite fibers such that 
          <m>h(x,y) \geq h_1(x) + h_2(y)</m> for all <m>x,y \in \NN</m>.
        </p>
      </statement>
      <proof>
        <p>
          Set 
          <md>
            <mrow>
              h_1(x) := \min\{\lfloor h(x,y)/2 \rfloor\colon y \in \NN\}
            </mrow>
            <mrow>
              h_2(y) := \min\{\lfloor h(x,y)/2 \rfloor\colon x \in \NN\}
            </mrow>
          </md>
          For any <m>x,y \in \NN</m>,
          <me>
            h_1(x,y) + h_2(x,y) \leq \lfloor h(x,y)/2 \rfloor + \lfloor h(x,y)/2 \rfloor \leq h(x,y)
          </me>.
          We prove that <m>h_1</m> has finite fibers, the proof for <m>h_2</m> being analogous.
          It suffices to check that for any <m>N</m>, there are at most finitely many <m>x</m> for which <m>h(x) \leq N</m>.
          For each such <m>x</m>, there exists some <m>y</m> such that <m>h(x,y) \leq 2N+1</m>;
          however, since <m>h</m> has finitely many fibers there are only finitely many such pairs <m>(x,y)</m>.
        </p>
      </proof>
    </lemma>
    <proposition xml:id="prop-prod-null-sequences">
      <statement>
        <p>
          We have
          <me>
            \left( \bigoplus_\NN R_\solid \right)^{\wedge}_{(f)} \otimes^L_{R_\solid} \left( \bigoplus_\NN R_\solid \right)^{\wedge}_{(f)}
            \cong \left( \bigoplus_{\NN \times \NN} R_\solid \right)^{\wedge}_{(f)}
          </me>;
          in particular the derived tensor product is concentrated in degree <m>0</m>.
        </p>
      </statement>
      <proof>
        <p>
          Using <xref ref="lem-factor-function-with-finite-fibers"/>,  we see that the colimit of
          <m>\prod_{n \in \NN} f^{h_1(n)} \widehat{R}_\solid \times \prod_{n \in \NN} f^{h_2(n)} \widehat{R}_\solid</m>
          as <m>h_1, h_2 \colon \NN \to \NN</m> range over functions with finite fibers is equal to the colimit of
          <m>\prod_{(n_1, n_2) \in \NN \times \NN} f^{h(n_1, n_2)} (\widehat{R}_\solid \times_{R_\solid} \widehat{R}_\solid)</m>
          as <m>h\colon \NN \times \NN \to \NN</m> ranges over functions with finite fibers.
          Via <xref ref="lem-tensor-product-over-R"/> and <xref ref="exa-completion-of-coproduct"/>, this translates into the desired assertion.
        </p>
      </proof>
    </proposition>
    <theorem xml:id="thm-product-derived-complete">
      <statement>
        <p>
          Suppose that <m>M, N \in \Mod_{R_\solid}</m> are derived <m>f</m>-complete.
          Then <m>M \otimes^L_{R_\solid} N</m> (the derived version of the tensor product in <m>\Mod_{R_\solid}</m>) is also derived <m>f</m>-complete.
        </p>
      </statement>
      <proof>
        <p>
          By <xref ref="prop-prod-null-sequences"/>, the claim holds when both <m>M</m> and <m>N</m> equal <m>\left( \bigoplus_\NN R_\solid \right)^{\wedge}_{(f)}</m>;
          since solid tensor products commute with countable products, 
          we may formally extend the claim to the case where both <m>M</m> and <m>N</m> are at most countable products of copies of this object, or countable
          coproducts of such products.
          We may then formally extend the claim further to the case where both <m>M</m> and <m>N</m> admit (possibly infinite) resolutions by objects of the previous form.
          Finally, we deduce the general case by applying <xref ref="rem-countably-filtered"/> to reduce to the previous case.
        </p>
      </proof>
    </theorem>
    <remark xml:id="rem-countably-filtered">
      <p>
        The category of derived <m>f</m>-complete solid modules is not stable under arbitrary colimits in <m>\Mod_{R_\solid}</m>:
        for instance, <m>R_f</m> is a colimit of copies of <m>R</m> but is not derived <m>f</m>-complete.
      </p>
      <p>
        However, derived <m>f</m>-completeness is preserved by <term>countably filtered</term> colimits in <m>\Mod_{R_\solid}</m>.
        That is, if one starts with a directed system of derived <m>f</m>-complete solid modules in <m>\Mod_{R_\solid}</m> and the colimit
        fails to be derived <m>f</m>-complete, one can find a witness for this failure consisting of some countably indexed subsystem.
      </p>
      <p>
        This also applies in the derived category.
      </p>
    </remark>
  </subsection>
  <subsection>
    <title>Some solid functional analysis</title>
    <p>
      We next indicate how to import some concepts from nonarchimedean functional analysis into the framework of solid abelian groups.
      For the sake of concreteness we work over <m>\QQ_p</m>, but similar considerations apply to any complete nonarchimedean field,
      and to some extent any nonarchimedean Banach ring (since the underlying topological ring of same is solid).
    </p>
    <definition>
      <p>
        Let <m>\ZZ_{p \solid}</m> denote the derived (or classical) <m>p</m>-completion of <m>\ZZ_\solid</m>;
        note that as a topological vector space this carries the <m>p</m>-adic topology rather than the discrete topology
        (<xref ref="rem-discrete-versus-solid-completion"/>).
        We write <m>\Mod_{\ZZ_{p\solid}}</m> to denote the category of <m>\ZZ_{p \solid}</m>-modules in <m>\Ab_\solid</m>.
      </p>
      <p>
        Set <m>\QQ_{p \solid} := \ZZ_{p \solid}[1/p]</m>.
        We can then consider the category <m>\Mod_{\ZZ_{p\solid}}</m> of solid <m>\QQ_p</m>-modules in <m>\Ab_\solid</m> as the full subcategory of
        <m>\Mod_{\ZZ_{p\solid}}</m> of objects on which multiplication by <m>p</m> is an isomorphism. Similarly for derived categories.
      </p>
      <p>
        The category <m>\Mod_{\QQ_{p\solid}}</m> admits the compact projective generator <m>\left( \prod_\NN \ZZ_{p \solid} \right)[1/p]</m>
        which is dual to <m>\left( \bigoplus_\NN \ZZ_{p \solid} \right)^{\wedge}_{(p)}[1/p]</m>. The latter is a <term>Banach space</term> over <m>\QQ_{p \solid}</m>
        for the supremum norm; the former is what one might call a <term>Smith space</term> over <m>\QQ_{p \solid}</m>.
      </p>
    </definition>
    <definition>
      <p>
        A <term>Frechet space</term> over <m>\QQ_{p \solid}</m> is an object which can be written as a countable limit of Banach spaces via
        transition maps with dense image. A typical example is given by power series convergent on an open unit disc, viewed as the limit of 
        the rings of power series convergent on closed subdiscs. 
      </p>
    </definition>
    <example>
      <p>
        In <m>\Mod_{\QQ_{p\solid}}</m>, we have the object <m>\prod_\NN \QQ_{p \solid}</m> which is not the same as <m>\left( \prod_\NN \ZZ_{p \solid} \right)[1/p]</m>.
        Rather,
        <men xml:id="eq-present-colim-of-Qpsolid-product">
          \prod_\NN \QQ_{p \solid} = \colim_h \left( \prod_{n \in \NN} p^{-h(n)} \ZZ_p \right)
        </men>
        where <m>h</m> ranges over all functions <m>\NN \to \NN</m>; in particular this is a Frechet space.
      </p>
    </example>
    <lemma xml:id="lem-factor-function-with-finite-fibers-reverse">
      <statement>
        <p>
          Let <m>h\colon \NN \times \NN \to \NN</m> be any function.
          Then we can find functions <m>h_1,h_2 \colon \NN \to \NN</m> such that 
          <m>h(x,y) \leq h_1(x) + h_2(y)</m> for all <m>x,y \in \NN</m>.
        </p>
      </statement>
      <proof>
        <p>
          Set 
          <md>
            <mrow>
              h_1(x) := \max\{h(x,y) \colon y \leq x\}
            </mrow>
            <mrow>
              h_2(y) := \max\{h(x,y) \colon x \leq y\}
            </mrow>
          </md>
          For any <m>x,y \in \NN</m>, we have either <m>x \geq y</m> or <m>y \leq x</m>, and so
          <me>
            h_1(x,y) + h_2(x,y) \geq h(x,y)
          </me>.
        </p>
      </proof>
    </lemma>
    <lemma xml:id="lem-product-Qp-Frechet">
      <statement>
        <p>
          We have
          <me>
            \left( \prod_\NN \QQ_{p \solid} \right) \otimes^L_\solid \left( \prod_\NN \QQ_{p \solid} \right) 
            \cong \prod_{\NN \times \NN} \QQ_{p \solid}.
          </me>
        </p>
      </statement>
      <proof>
        <p>
          From <xref ref="eq-present-colim-of-Qpsolid-product"/> we have formally
          <me>
            \left( \prod_\NN \QQ_{p \solid} \right) \otimes^L_\solid \left( \prod_\NN \QQ_{p \solid} \right) 
            \cong
            \colim_{h_1, h_2} \left( \prod_{n \in \NN \times \NN} p^{-h_1(n)-h_2(n)} \ZZ_p \right).
          </me>
          By <xref ref="lem-factor-function-with-finite-fibers-reverse"/>, this gives the same result as
          <me>
            \colim_h  \left( \prod_{n \in \NN \times \NN} p^{-h(n)} \ZZ_p \right)
          </me>
          where now <m>h \colon \NN \times \NN</m> ranges over all functions; from <xref ref="eq-present-colim-of-Qpsolid-product"/> this yields the claim.
        </p>
      </proof>
    </lemma>
    <proposition>
      <statement>
        <p>
          For any two Frechet spaces <m>M,N</m> over <m>\QQ_{p \solid}</m>,
          <me>M \otimes^L_\solid N</me> is again a Frechet space (concentrated in degree <m>0</m>).
        </p>
      </statement>
      <proof>
        <p>
          This follows by suitably adapting the proof of <xref ref="lem-product-Qp-Frechet"/>.
        </p>
      </proof>
    </proposition>
  </subsection>
</section>